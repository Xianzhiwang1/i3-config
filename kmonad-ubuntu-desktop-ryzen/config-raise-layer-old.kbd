(defcfg
  ;; input  (device-file "/dev/input/by-path/pci-0000:02:00.0-usb-0:5.3:1.0-event-kbd")
  input  (device-file "/dev/input/by-id/usb-SINO_WEALTH_Gaming_KB-event-kbd")
  output (uinput-sink "My KMonad output")
  fallthrough true
  )

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc  ins  home pgup  nlck kp/  kp*  kp-
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \     del  end  pgdn  kp7  kp8  kp9  kp+
  caps a    s    d    f    g    h    j    k    l    ;    '    ret                        kp4  kp5  kp6
  lsft z    x    c    v    b    n    m    ,    .    /    rsft                 up         kp1  kp2  kp3  kprt
  lctl lmet lalt           spc            ralt  cmp   rmet rctl          left down rght  kp0  kp.
)


(defalias
  ;; layer-toggle
  fn0 (layer-switch qwerty) ;; Bind fn0 to a button that switches to a layer
  fn1 (layer-switch lower)
  fn2  (layer-switch raise) 
  fn3 (layer-toggle qwerty) ;; Bind fn3 to a button that toggles to a layer
  fn4 (layer-toggle lower)
  fn5 (layer-toggle raise)

  tm (tap-next-press ret @fn0)
  tlow (tap-hold 150 spc @fn4)
  tqwer (tap-hold 150 spc @fn3)

  kil  C-A-del                ;; Bind kil to a button that Ctrl-Alt-deletes
  ;; 200 ms for the tapping term, home row mods
    sft_a (tap-hold-next-release 200 a lsft)
    ctl_s (tap-hold-next-release 200 s lctl)
    alt_d (tap-hold-next-release 200 d lalt)
    met_f (tap-hold-next-release 200 f lmet)

    sft_; (tap-hold-next-release 200 ; rsft)
    ctl_l (tap-hold-next-release 200 l rctl)
    alt_k (tap-hold-next-release 200 k lalt)
    met_j (tap-hold-next-release 200 j rmet)

    lft_u (tap-hold-next-release 200 u left)
    dwn_i (tap-hold-next-release 200 i down)
    up_o (tap-hold-next-release 200 o up)
    rght_p (tap-hold-next-release 200 p rght)
)

(deflayer qwerty 
  esc @fn1 @fn2  f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc  ins  home pgup  nlck kp/  kp*  kp-
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \     del  end  pgdn  kp7  kp8  kp9  kp+
  esc  @sft_a    @ctl_s    @alt_d    @met_f    g    h    @met_j    @alt_k    @ctl_l    @sft_;    '    ret                        kp4  kp5  kp6
  lsft z    x    c    v    b    n    m    ,    .    /    rsft                 up         kp1  kp2  kp3  kprt
  lctl lalt lmet          @tlow           rmet _   ralt  rctl            left down rght  kp0  kp.
)




(deflayer lower 
  esc @fn0 @fn0  f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
  grv  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10    -    =  bspc  ins  home pgup  nlck kp/  kp*  kp-
  grv  !    @    #    $    %    ^    &    *    \(    \)    [    ]    \   del  end  pgdn  kp7  kp8  kp9  kp+
  ~    1    2    3    4    5    6    7    8    9    0    '    ret                        kp4  kp5  kp6
  lsft \_   -    +    [    {    }    ]    |    \    =    rsft                 up         kp1  kp2  kp3  kprt
  lctl lalt lmet         @tqwer           rmet _   ralt  rctl            left down rght  kp0  kp.
)

(deflayer raise 
  esc @fn0  @fn0 f3   f4   f5   f6   f7   f8   f9   f10  f11  f12        ssrq slck pause
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc  ins  home pgup  nlck kp/  kp*  kp-
  tab  q        w        e        r        t    y    @lft_u    @dwn_i    @up_o    @rght_p    [    ]    \     del  end  pgdn  kp7  kp8  kp9  kp+
  esc  @sft_a    @ctl_s    @alt_d    @met_f    g    h    j    k    l    ;    '    ret                        kp4  kp5  kp6
  lsft z    x    c    v    b    n    m    ,    .    /    rsft                 up         kp1  kp2  kp3  kprt
  lctl lalt lmet           @tlow         rmet _   ralt   rctl           left down rght   kp0  kp.
)

(deflayer mylayer
  _    _    _    _    _    _    _    _    _    _    _    _    _          _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _     _    _    _     _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _     _    _    _     _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _                          _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _                    _          _    _    _    _
  _    _    _              _              _    _    _    _               _    _    _     _    _   
)
